apiVersion: v1
kind: ConfigMap
metadata:
  name: product-service-configmap
  labels:
    app: app-staging
data:
  db_URL: product-service-db-svc 
  

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: product-service
  labels:
    app: product-service
spec:
  replicas: 3
  selector:
    matchLabels:
      app: product-service
  template:
    metadata:
      labels:
        app: product-service
    spec:
      containers:
      - name: product-service
        image: josephat/product-service:${CIRCLE_WORKFLOW_ID:0:7}
        ports:
        - containerPort: 3003
        envFrom:
            - configMapRef:
                name: product-service-configmap
        volumeMounts:
          - name: logvolume04
            mountPath: /var/log
          - name: product-service-dbvolume
            mountPath: /data/db
volumes:
  - name: logvolume04
    hostPath:
      path: /var/log/pods
      emptyDir: {}
  - name: product-service-dbvolume
    hostPath:
      path: /data/db
      emptyDir: {}
  
---
apiVersion: v1
kind: Service
metadata:
  name: product-service-svc
spec:
  selector:
    app: product-service
  type: NodePort
  ports:
    - protocol: TCP
      port: 3003
      targetPort: 3003
      nodePort: 31000

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: product-service-db
  labels:
    app: product-service-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: product-service-db
  template:
    metadata:
      labels:
        app: product-service-db
    spec:
      containers:
      - name: product-service
        image: mongo:4.2.22
        ports:
        - containerPort: 27017
        volumeMounts:
          - name: product-service-mongodb-data
            mountPath: /data/db
volumes:
  - name: product-service-mongodb-data
        persistentVolumeClaim:
          claimName: product-service-mongodb-pvc
  #- name: product-service-dbvolume
  #  hostPath:
    #  path: /data/db
     # emptyDir: {}
  
---
apiVersion: v1
kind: Service
metadata:
  name: product-service-db-svc
spec:
  selector:
    app: product-service-db
  ports:
    - protocol: TCP
      port: 27014
      targetPort: 27017

---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: product-service-mongodb-storageclass
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
allowVolumeExpansion: true

---
apiVersion: v1
kind: PersistentVolume
metadata:
    name: product-service-mongodb-pv
spec:
  capacity:
    storage: 10Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: product-service-mongodb-storageclass
  local:
    path: /mnt/data
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: size
          operator: In
          values:
            - large

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: product-service-mongodb-pvc
spec:
  storageClassName: product-service-mongodb-storageclass
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 10Gi

